components:
  schemas:
    ClassifierInput:
      type: object
      properties:
        age:
          type: number
          example: 25
        height:
          type: number
          example: 180
        weight:
          type: number
          example: 80
        gender:
          type: string
          enum: [MALE, FEMALE]
          example: MALE
        lifestyle:
          type: string
          enum: [SEDENTARY, MODERATE, ACTIVE, ATHLETE]
          example: SEDENTARY
        location:
          type: string
          enum: [EUROPE, ASIA, NORTH AMERICA, SOUTH AMERICA, AFRICA, AUSTRALIA]
          example: EUROPE
        symptoms:
          type: array
          items:
            type: string
          example: ["Fever", "Cough", "Difficulty breathing"]
        vitalSigns:
          type: object
          properties:
            Cholesterol Level:  # Corrected property key to follow a consistent naming convention
              type: number
              example: 37.5
            Temperature:  # Corrected property key to remove spaces
              type: number
              example: 36.6
            BMI:  # Corrected property key to remove spaces
              type: number
              example: 24.7
            Blood Pressure:  # Corrected property key to remove spaces
              type: number
              example: 120
    ClassifierOutput:
      type: object
      properties:
        predictions:
          type: object
          additionalProperties:
            type: number
          description: "A map of diseases and their probabilities"
          example:
            Influenza: 0.8
            Common Cold: 0.1